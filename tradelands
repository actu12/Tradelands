-- Load OrionLib
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({
    Name = "Fuck | Tradelands",
    HidePremium = false,
    SaveConfig = false,
    ConfigFolder = "Retardware-TL",
    IntroText = "Welcome to Tradelands"
})

local AutoTravelToggle
local FromDropdown
local ToDropdown
local FromLocation = "Whitecrest" -- default
local ToLocation = "Freeport" -- default
local AutoTravel = false -- default

local function MakeTab(Window, LocalName, TabName)
    local Tab = Window:MakeTab({
        Name = TabName,
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })
    _G[LocalName] = Tab  -- Store the tab object in a global variable with the specified name
end

local farming = false
local function AutoFarm1(Value)
    local FireArg
    farming = Value
    
    while farming do
        local function getClosestOreNode()
            local player = game.Players.LocalPlayer
            local character = player.Character or player.CharacterAdded:Wait()
            local rootPart = character:WaitForChild("HumanoidRootPart")
            local closestNode
            local shortestDistance = math.huge

            for _, oreNode in pairs(workspace.OreNodes["Whitecrest Ore"]:GetChildren()) do
                if oreNode.Transparency == 0 then
                    local distance = (rootPart.Position - oreNode.Position).Magnitude
                    if distance < shortestDistance then
                        closestNode = oreNode
                        shortestDistance = distance
                    end
                end
            end

            return closestNode
        end
        local function checkDistanceAndTween()
            local player = game.Players.LocalPlayer
            local character = player.Character or player.CharacterAdded:Wait()
            local rootPart = character:WaitForChild("HumanoidRootPart")
            
            local targetPart = getClosestOreNode()
            if not targetPart then return end
        
            local distanceThreshold = 3
            local tweenService = game:GetService("TweenService")
            local distance = (rootPart.Position - targetPart.Position).Magnitude
            if distance > distanceThreshold then
                local tweenInfo = TweenInfo.new(
                    2, -- Time
                    Enum.EasingStyle.Linear, -- Easing style
                    Enum.EasingDirection.Out -- Easing direction
                )
                
                -- Calculate the goal position right beside the target part
                local goalPosition = targetPart.Position + Vector3.new(targetPart.Size.X/2 + 1, 0, 0)
        
                local goal = {}
                goal.CFrame = CFrame.new(goalPosition)
        
                local tween = tweenService:Create(rootPart, tweenInfo, goal)
                tween:Play()
                
                tween.Completed:Wait()
            end

            -- Adjust the player's HumanoidRootPart to face the target part
            local direction = (targetPart.Position - rootPart.Position).Unit
            rootPart.CFrame = CFrame.new(rootPart.Position, rootPart.Position + direction)
        end
        checkDistanceAndTween()
        wait(0.2)

        local args2 = {
            [1] = "right",
--[[            [2] = {
                [1] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart,
                    [2] = 3
                },
                [2] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.RightLowerArm,
                    [2] = 2
                },
                [3] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.LeftUpperArm,
                    [2] = 2
                },
                [4] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.RightUpperArm,
                    [2] = 2
                },
                [5] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.UpperTorso,
                    [2] = 3
                },
                [6] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.LeftHand,
                    [2] = 1
                },
                [7] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.LeftUpperLeg,
                    [2] = 2
                },
                [8] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.RightHand,
                    [2] = 1
                },
                [9] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.LeftLowerLeg,
                    [2] = 2
                },
                [10] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.RightLowerLeg,
                    [2] = 2
                },
                [11] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.RightUpperLeg,
                    [2] = 2
                },
                [12] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.LeftFoot,
                    [2] = 1
                },
                [13] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.LowerTorso,
                    [2] = 2
                },
                [14] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.LeftLowerArm,
                    [2] = 2
                },
                [15] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.Head,
                    [2] = 1
                },
                [16] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.RightFoot,
                    [2] = 1
                },
                [17] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart,
                    [2] = 2
                },
                [18] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.Head,
                    [2] = 1
                },
                [19] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.RightFoot,
                    [2] = 1
                },
                [20] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.RightLowerLeg,
                    [2] = 1
                },
                [21] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.RightUpperLeg,
                    [2] = 1
                },
                [22] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.LeftFoot,
                    [2] = 1
                },
                [23] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.LeftLowerLeg,
                    [2] = 1
                },
                [24] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.LeftUpperLeg,
                    [2] = 1
                },
                [25] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.RightHand,
                    [2] = 1
                },
                [26] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.RightLowerArm,
                    [2] = 1
                },
                [27] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.RightUpperArm,
                    [2] = 1
                },
                [28] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.LeftHand,
                    [2] = 1
                },
                [29] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.LeftLowerArm,
                    [2] = 1
                },
                [30] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.LeftUpperArm,
                    [2] = 1
                },
                [31] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.UpperTorso,
                    [2] = 2
                },
                [32] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.LowerTorso,
                    [2] = 1
                }
            }]]
        }
        FireArg = args2
        game.Players.LocalPlayer.Character.ActiveGear.ToolScript:FindFirstChild("Swing"):FireServer(unpack(FireArg))
        wait(0.2)
    end
end

local farming2 = false
local function AutoFarm2(Value)
    local FireArg
    farming2 = Value
    
    while farming2 do
        local function getRandomPartFromTree(tree)
            local parts = {}
            for _, part in pairs(tree:GetChildren()) do
                table.insert(parts, part)
            end
            if #parts > 0 then
                return parts[math.random(1, #parts)]
            else
                return nil
            end
        end

        local function getClosestTree()
            local player = game.Players.LocalPlayer
            local character = player.Character or player.CharacterAdded:Wait()
            local rootPart = character:WaitForChild("HumanoidRootPart")
            local closestTree
            local shortestDistance = math.huge

            for _, tree in pairs(workspace.Trees["Whitecrest Trees"]:GetChildren()) do
                local part = getRandomPartFromTree(tree)
                if part then
                    local distance = (Vector3.new(rootPart.Position.X, 0, rootPart.Position.Z) - Vector3.new(part.Position.X, 0, part.Position.Z)).Magnitude
                    if distance < shortestDistance then
                        closestTree = part
                        shortestDistance = distance
                    end
                end
            end

            return closestTree
        end
        
        local function checkDistanceAndTween()
            local player = game.Players.LocalPlayer
            local character = player.Character or player.CharacterAdded:Wait()
            local rootPart = character:WaitForChild("HumanoidRootPart")
            
            local targetPart = getClosestTree()
            if not targetPart then return end
        
            local distanceThreshold = 3
            local tweenService = game:GetService("TweenService")
            local distance = (Vector3.new(rootPart.Position.X, 0, rootPart.Position.Z) - Vector3.new(targetPart.Position.X, 0, targetPart.Position.Z)).Magnitude
            if distance > distanceThreshold then
                local tweenInfo = TweenInfo.new(
                    2, -- Time
                    Enum.EasingStyle.Linear, -- Easing style
                    Enum.EasingDirection.Out -- Easing direction
                )
                
                -- Calculate the goal position right beside the target part
                local goalPosition = targetPart.Position + Vector3.new(0, 1, 1)
        
                local goal = {}
                goal.CFrame = CFrame.new(goalPosition)
        
                local tween = tweenService:Create(rootPart, tweenInfo, goal)
                tween:Play()
                
                tween.Completed:Wait()
            end
            -- Adjust the camera to look at the target part
            local camera = workspace.CurrentCamera
            local cameraPosition = camera.CFrame.Position
            local targetPartPosition = targetPart.Position
            
            -- Set the camera's CFrame to look at the target part
            camera.CFrame = CFrame.new(cameraPosition, targetPartPosition)
        end
        checkDistanceAndTween()
        wait(0.2)

        local args2 = {
            [1] = "right",
            --[[[2] = {
                [1] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart,
                    [2] = 3
                },
                [2] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.RightLowerArm,
                    [2] = 2
                },
                [3] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.LeftUpperArm,
                    [2] = 2
                },
                [4] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.RightUpperArm,
                    [2] = 2
                },
                [5] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.UpperTorso,
                    [2] = 3
                },
                [6] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.LeftHand,
                    [2] = 1
                },
                [7] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.LeftUpperLeg,
                    [2] = 2
                },
                [8] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.RightHand,
                    [2] = 1
                },
                [9] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.LeftLowerLeg,
                    [2] = 2
                },
                [10] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.RightLowerLeg,
                    [2] = 2
                },
                [11] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.RightUpperLeg,
                    [2] = 2
                },
                [12] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.LeftFoot,
                    [2] = 1
                },
                [13] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.LowerTorso,
                    [2] = 2
                },
                [14] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.LeftLowerArm,
                    [2] = 2
                },
                [15] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.Head,
                    [2] = 1
                },
                [16] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.RightFoot,
                    [2] = 1
                },
                [17] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart,
                    [2] = 2
                },
                [18] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.Head,
                    [2] = 1
                },
                [19] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.RightFoot,
                    [2] = 1
                },
                [20] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.RightLowerLeg,
                    [2] = 1
                },
                [21] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.RightUpperLeg,
                    [2] = 1
                },
                [22] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.LeftFoot,
                    [2] = 1
                },
                [23] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.LeftLowerLeg,
                    [2] = 1
                },
                [24] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.LeftUpperLeg,
                    [2] = 1
                },
                [25] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.RightHand,
                    [2] = 1
                },
                [26] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.RightLowerArm,
                    [2] = 1
                },
                [27] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.RightUpperArm,
                    [2] = 1
                },
                [28] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.LeftHand,
                    [2] = 1
                },
                [29] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.LeftLowerArm,
                    [2] = 1
                },
                [30] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.LeftUpperArm,
                    [2] = 1
                },
                [31] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.UpperTorso,
                    [2] = 2
                },
                [32] = {
                    [1] = game:GetService("Players").LocalPlayer.Character.LowerTorso,
                    [2] = 1
                }
            }]]
        }
        FireArg = args2
        game.Players.LocalPlayer.Character.ActiveGear.ToolScript:FindFirstChild("Swing"):FireServer(unpack(FireArg))
        wait(0.2)
    end
end

MakeTab(Window, "MainTab", "Main")
MakeTab(Window, "SecondTab", "Main 2")

_G.MainTab:AddLabel("WIP, DOESNT WORK YET")

FromDropdown = _G.MainTab:AddDropdown({
    Name = "From (location)",
    Default = "Whitecrest",
    Options = {"Whitecrest", "Freeport"},
    Callback = function(Value)
        FromLocation = Value
    end
})

ToDropdown = _G.MainTab:AddDropdown({
    Name = "To (location)",
    Default = "Freeport",
    Options = {"Whitecrest", "Freeport"},
    Callback = function(Value)
        ToLocation = Value
    end
})

AutoTravelToggle = _G.MainTab:AddToggle({
    Name = "Autotravel (use boat)",
    Default = AutoTravel,
    Callback = function(Value)
        AutoTravel = Value
        if FromLocation == ToLocation then
            OrionLib:MakeNotification({
                Name = "Error",
                Content = "Can't travel to and from the same location",
                Image = "rbxassetid://4483345998",
                Time = 5
            })
            ToLocation = "Freeport"
            ToDropdown:Set("Freeport")
            if AutoTravelToggle then
                AutoTravelToggle:Set(false)
            end
        end
    end
})

_G.SecondTab:AddToggle({
    Name = "Auto swing (IRON)",
    Default = false,
    Callback = function(Value)
        local args1 = {
            [1] = Value,
            [2] = 1,
            [3] = "Stone Pickaxe",
            [4] = 0,
            [5] = 0
        }
        game:GetService("ReplicatedStorage"):WaitForChild("RemoteFunctionz"):WaitForChild("Gear"):WaitForChild("Equip"):FireServer(unpack(args1))
        farming = Value
        AutoFarm1(Value)
    end
})

_G.SecondTab:AddToggle({
    Name = "Auto swing (WOOD)",
    Default = false,
    Callback = function(Value)
        local args2 = {
            [1] = Value,
            [2] = 3,
            [3] = "Stone Axe",
            [4] = 0,
            [5] = 0
        }
        game:GetService("ReplicatedStorage"):WaitForChild("RemoteFunctionz"):WaitForChild("Gear"):WaitForChild("Equip"):FireServer(unpack(args2))
        farming2 = Value
        AutoFarm2(Value)
    end
})

_G.SecondTab:AddToggle({
    Name = "Inf stamina",
    Default = false,
    Callback = function(Value)
        local player = game.Players.LocalPlayer
        repeat wait() until player.Character -- Wait until the character is loaded
        local staminaScript = player.PlayerGui.GameGui.Stamina
        staminaScript.Disabled = Value
    end
})
